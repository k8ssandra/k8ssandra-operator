name: kuttl tests

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'docs/**'
      - 'CHANGELOG/**'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - 'docs/**'
      - 'CHANGELOG/**'
jobs:
  build_image:
    name: Build image
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.set_image_var.outputs.image }}
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-  uses: docker/setup-buildx-action@v1
      - name: Set build tags
        id: set_build_tags
        run: |
          image="k8ssandra-operator/k8ssandra-operator:latest"
          echo "build_tags=$image" >> $GITHUB_ENV
          echo "image=$image" >> $GITHUB_ENV
      - name: Update build tags
        id: update_build_tags
        if: startsWith(github.head_ref, 'prepare-release-')
        run: |
          branch_name=${{ github.head_ref }}
          release_tag=k8ssandra/k8ssandra-operator:${branch_name:16}
          echo "image=$release_tag" >> $GITHUB_ENV
          echo "build_tags=k8ssandra/k8ssandra-operator:latest,$release_tag" >> $GITHUB_ENV
      - name: Set immage output var
        id: set_image_var
        run: echo ::set-output name=image::${{ env.image }}
      - name: Build Docker image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          file: Dockerfile
          context: .
          push: false
          tags: ${{ env.build_tags }}
          platforms: linux/amd64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          outputs: type=docker,dest=/tmp/k8ssandra-k8ssandra-operator.tar
      - name: Upload k8ssandra-operator image
        uses: actions/upload-artifact@v2
        with:
          name: k8ssandra-operator
          path: /tmp/k8ssandra-k8ssandra-operator.tar
  run_kuttl_test:
    runs-on: ubuntu-latest
    needs: [build_image]
    name: Run kuttl tests
    strategy:
      matrix:
        k8s_version: ["1.21"]
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-  uses: docker/setup-buildx-action@v1
    - name: Kind kube-proxy issue workaround
      run: sudo sysctl net/netfilter/nf_conntrack_max=524288
    - name: Download k8ssandra-operator image
      uses: actions/download-artifact@v2
      with:
        name: k8ssandra-operator
        path: /tmp
    - name: Load Docker images
      run: |
        docker load --input /tmp/k8ssandra-k8ssandra-operator.tar
    - name: install kustomize
      run: |
        make kustomize
    - name: Run kuttl-test
      run: |
        # We are running tests against k8s 1.20 - 1.22 currently. 
        # Additional versions must be added in kind config files under ./test/config/kind

        # Currently we aren't using the kuttl-test Makefile target while trying to iron out the
        # release process. The following changes have been made to stay as close as possible
        # to the existing behavior with kuttl tests while supporting the ability to use a release
        # image tag of the operator. 

        make install-kuttl
        kind create cluster --name k8ssandra-0 --config ./test/kuttl/config/kind/w3k${{ matrix.k8s_version }}.yaml
        make IMG=${{ needs.build_image.outputs.image }} kind-load-image
        ./bin/kubectl-kuttl test --kind-context=k8ssandra-0 --start-kind=false --test test-servicemonitors
        kind delete cluster --name k8ssandra-0
        kind create cluster --name k8ssandra-0 --config ./test/kuttl/config/kind/w3k${{ matrix.k8s_version }}.yaml
        make IMG=${{ needs.build_image.outputs.image }} kind-load-image
        ./bin/kubectl-kuttl test --kind-context=k8ssandra-0 --start-kind=false --test test-config-control-plane
