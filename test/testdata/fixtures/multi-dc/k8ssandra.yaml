apiVersion: k8ssandra.io/v1alpha1
kind: K8ssandraCluster
metadata:
  name: test
spec:
  cassandra:
    serverVersion: 5.0.4
    storageConfig:
      cassandraDataVolumeClaimSpec:
        storageClassName: standard
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 5Gi
    telemetry:
      vector:
        enabled: true
        components:
          transforms:
            - name: my-transform
              type: remap
              inputs:
                - cassandra_metrics
              config: |-
                source = ".tags.host = get_hostname!()"
          sinks:
            - name: console
              inputs:
                - my-transform
              type: console
              config: |-
                [sinks.console.encoding]
                codec = "json"
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 100m
            memory: 128Mi
    config:
      cassandraYaml:
        auto_snapshot: false
        memtable_flush_writers: 1
        concurrent_compactors: 1
        concurrent_reads: 2
        concurrent_writes: 2
        concurrent_counter_writes: 2
      jvmOptions:
        heapSize: 512Mi
        heapNewGenSize: 256Mi
        gc: CMS
    networking:
      hostNetwork: true
    mgmtAPIHeap: 64Mi
    datacenters:
      - metadata:
          name: dc1
        k8sContext: kind-k8ssandra-0
        size: 2
        racks:
          - name: rack1
            nodeAffinityLabels:
              "topology.kubernetes.io/zone": region1-zone1
          - name: rack2
            nodeAffinityLabels:
              "topology.kubernetes.io/zone": region1-zone2
      - metadata:
          name: dc2
        k8sContext: kind-k8ssandra-1
        size: 2
        datacenterName: real-dc2
        racks:
          - name: rack1
            nodeAffinityLabels:
              "topology.kubernetes.io/zone": region2-zone1
          - name: rack2
            nodeAffinityLabels:
              "topology.kubernetes.io/zone": region2-zone2
